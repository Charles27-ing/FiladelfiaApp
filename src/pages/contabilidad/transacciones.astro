---
import LayoutProtected from '@layouts/LayoutProtected.astro';


// Definición de tipos
interface Transaccion {
  id: string;
  fecha: string;
  monto: number;
  tipo: 'ingreso' | 'egreso';
  categoria_id: string;
  categoria_nombre: string;
  actividad_id?: string;
  actividad_nombre?: string;
  persona_id?: string;
  persona_nombre?: string;
  descripcion?: string;
  evidencia?: string;
}

interface Actividad {
  id: string;
  nombre: string;
}

// Cargar transacciones y actividades
const baseUrl = Astro.url.origin;
let transacciones: Transaccion[] = [];
let actividades: Actividad[] = [];
let error: string | null = null;

try {
  const [transaccionesRes, actividadesRes] = await Promise.all([
    fetch(`${baseUrl}/api/contabilidad/transacciones`),
    fetch(`${baseUrl}/api/contabilidad/actividades`)
  ]);

  if (transaccionesRes.ok) {
    transacciones = await transaccionesRes.json();
    console.log('Transacciones recibidas en Astro:', transacciones.length);
  } else {
    error = 'No se pudieron cargar las transacciones';
    console.error('Error cargando transacciones:', await transaccionesRes.text());
  }

  if (actividadesRes.ok) {
    actividades = await actividadesRes.json();
    console.log('Actividades recibidas en Astro:', actividades.length);
  } else {
    console.error('Error cargando actividades:', await actividadesRes.text());
  }
} catch (err) {
  error = 'Error al cargar los datos';
  console.error('Error en carga:', err);
}

// Obtener mensajes de URL
const url = new URL(Astro.request.url);
const successMessage = url.searchParams.get('success');
const errorMessage = url.searchParams.get('error');
// Serializar datos de forma segura para incrustar como JSON sin escape
const transaccionesJson = JSON.stringify(transacciones).replace(/</g, '\\u003c');
const actividadesJson = JSON.stringify(actividades).replace(/</g, '\\u003c');
---
<LayoutProtected title="Listado de Transacciones">
  <div class="min-h-screen bg-gradient-to-br from-gray-50 via-white to-green-50 p-4 sm:p-6 lg:p-8">
    <div class="max-w-7xl mx-auto">

      <!-- Header y Botones de exportación -->
      <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6 gap-4">
        <h1 class="text-3xl font-extrabold text-gray-900">Historial de Transacciones</h1>
        <div class="flex gap-3">
          <button id="export-pdf-all" class="group inline-flex items-center px-5 py-2.5 bg-red-500 text-white font-medium rounded-lg shadow-md hover:bg-red-600 transform hover:-translate-y-0.5 transition-all duration-300 ease-in-out">
            <svg class="h-5 w-5 mr-2 group-hover:scale-110 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z"></path>
            </svg>
            Exportar PDF
          </button>
          <button id="export-excel-all" class="group inline-flex items-center px-5 py-2.5 bg-green-600 text-white font-medium rounded-lg shadow-md hover:bg-green-700 transform hover:-translate-y-0.5 transition-all duration-300 ease-in-out">
            <svg class="h-5 w-5 mr-2 group-hover:scale-110 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
            </svg>
            Exportar Excel
          </button>
        </div>
      </div>

      <!-- Mensajes de alerta -->
      {successMessage && (
        <div class="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-6 rounded-lg shadow-md" role="alert">
          <p class="font-bold">Éxito</p>
          <p>{successMessage}</p>
        </div>
      )}
      {errorMessage && (
        <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-6 rounded-lg shadow-md" role="alert">
          <p class="font-bold">Error</p>
          <p>{errorMessage}</p>
        </div>
      )}
      {error && (
        <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-6 rounded-lg shadow-md" role="alert">
          <p class="font-bold">Error</p>
          <p>{error}</p>
        </div>
      )}

      <!-- Sección de Filtros -->
      <div class="bg-white rounded-xl shadow-lg p-6 mb-8 border border-gray-100">
        <h2 class="text-xl font-bold text-gray-800 mb-5">Filtrar Transacciones</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-5 items-end">
          <div>
            <label for="actividad_filter" class="block text-sm font-medium text-gray-700 mb-1">Actividad</label>
            <div class="relative">
              <select id="actividad_filter" class="block w-full pl-3 pr-10 py-2 border border-gray-300 rounded-md bg-white focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500 sm:text-sm transition-all duration-200 ease-in-out appearance-none">
                <option value="">Todas las actividades</option>
                {actividades.map((act: Actividad) => (
                  <option value={act.id}>{act.nombre}</option>
                ))}
              </select>
              <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700">
                <svg class="h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                  <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
                </svg>
              </div>
            </div>
          </div>
          <div>
            <label for="fecha_inicio" class="block text-sm font-medium text-gray-700 mb-1">Fecha Inicio</label>
            <input type="date" id="fecha_inicio" class="block w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500 transition-all duration-200 ease-in-out" />
          </div>
          <div>
            <label for="fecha_fin" class="block text-sm font-medium text-gray-700 mb-1">Fecha Fin</label>
            <input type="date" id="fecha_fin" class="block w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500 transition-all duration-200 ease-in-out" />
          </div>
          <div class="flex gap-3">
            <button id="search_btn" class="w-full flex-1 px-5 py-2.5 bg-green-500 text-white font-medium rounded-lg shadow-md hover:bg-green-600 transform hover:-translate-y-0.5 transition-all duration-300 ease-in-out">
              Buscar
            </button>
            <button id="clear_filters" class="w-full flex-1 px-5 py-2.5 bg-gray-200 text-gray-700 font-medium rounded-lg shadow-md hover:bg-gray-300 transform hover:-translate-y-0.5 transition-all duration-300 ease-in-out">
              Limpiar
            </button>
          </div>
        </div>
      </div>

      <!-- Resumen por actividad (oculto por defecto) -->
      <div id="resumen-container" class="bg-white rounded-xl shadow-lg p-6 mb-8 border border-gray-100 hidden">
        <h2 class="text-xl font-bold text-gray-800 mb-4">Resumen de Actividad</h2>
        <div class="grid grid-cols-1 sm:grid-cols-3 gap-4 text-center">
          <div class="bg-green-50 p-4 rounded-lg border border-green-200">
            <p class="text-sm text-gray-600">Ingresos</p>
            <p id="resumen-ingresos" class="text-2xl font-bold text-green-700 mt-1"></p>
          </div>
          <div class="bg-red-50 p-4 rounded-lg border border-red-200">
            <p class="text-sm text-gray-600">Egresos</p>
            <p id="resumen-egresos" class="text-2xl font-bold text-red-700 mt-1"></p>
          </div>
          <div class="bg-gray-50 p-4 rounded-lg border border-gray-200">
            <p class="text-sm text-gray-600">Neto</p>
            <p id="resumen-neto" class="text-2xl font-bold text-gray-800 mt-1"></p>
          </div>
        </div>
      </div>

      <!-- Tabla Desktop -->
      <div class="hidden md:block bg-white rounded-xl shadow-lg overflow-hidden border border-gray-100">
        <table class="min-w-full divide-y divide-gray-200">
          <thead class="bg-gray-50">
            <tr>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">N° Transacción</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Fecha</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Monto</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Tipo</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Categoría</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actividad</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Persona</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Descripción</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Estado</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Acciones</th>
            </tr>
          </thead>
          <tbody id="transacciones-container" class="bg-white divide-y divide-gray-200">
            <!-- Contenido de la tabla se llenará con JS -->
          </tbody>
        </table>
      </div>

      <!-- Tarjetas Móvil -->
      <div id="transacciones-container-mobile" class="md:hidden space-y-4">
        <!-- Contenido de las tarjetas se llenará con JS -->
      </div>

      <!-- Paginación -->
      <div class="mt-8 flex flex-col sm:flex-row items-center justify-between space-y-4 sm:space-y-0">
        <div class="text-sm text-gray-700">
          Mostrando <span id="pagination-from" class="font-medium">1</span> a <span id="pagination-to" class="font-medium">5</span> de <span id="pagination-total" class="font-medium">0</span> transacciones
        </div>
        <div class="flex space-x-2">
          <button id="prev-btn" class="px-4 py-2 bg-gray-200 text-gray-700 rounded-lg shadow-sm hover:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 ease-in-out">
            Anterior
          </button>
          <button id="next-btn" class="px-4 py-2 bg-gray-200 text-gray-700 rounded-lg shadow-sm hover:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 ease-in-out">
            Siguiente
          </button>
        </div>
      </div>
    </div>
  </div>

  <script type="application/json" id="transacciones-data" set:html={transaccionesJson}></script>
  <script type="application/json" id="actividades-data" set:html={actividadesJson}></script>
  <script type="module">
    import { initializeTransaccionesFilters } from '/src/scripts/transacciones-filters.ts';
    
    document.addEventListener('DOMContentLoaded', () => {
      try {
        const txEl = document.getElementById('transacciones-data');
        const actEl = document.getElementById('actividades-data');
        const transacciones = JSON.parse(txEl?.textContent || '[]');
        const actividades = JSON.parse(actEl?.textContent || '[]');
        console.log('Script cargado en transacciones.astro', { transacciones: transacciones.length, actividades: actividades.length });
        initializeTransaccionesFilters(transacciones, actividades);
      } catch (error) {
        console.error('Error cargando datos o inicializando filtros:', error);
      }
    });
  </script>

  <style>
    /* Estilos adicionales para la tabla y tarjetas */
    #transacciones-container tr:hover {
      background-color: #f0fdf4; /* green-50 */
      transition: background-color 0.2s ease-in-out;
    }
    #transacciones-container-mobile > div {
      background-color: #ffffff;
      border-radius: 0.75rem; /* rounded-xl */
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06); /* shadow-lg */
      border: 1px solid #e5e7eb; /* border border-gray-100 */
      padding: 1.5rem; /* p-6 */
      transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
    }
    #transacciones-container-mobile > div:hover {
      transform: translateY(-4px);
      box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
    }
    #transacciones-container-mobile .data-item {
      display: flex;
      justify-content: space-between;
      padding-top: 0.5rem;
      padding-bottom: 0.5rem;
      border-bottom: 1px solid #f3f4f6; /* gray-100 */
    }
    #transacciones-container-mobile .data-item:last-child {
      border-bottom: none;
    }
    #transacciones-container-mobile .label {
      font-weight: 500;
      color: #6b7280; /* gray-600 */
    }
    #transacciones-container-mobile .value {
      font-weight: 600;
      color: #1f2937; /* gray-900 */
    }
    #transacciones-container-mobile .value.ingreso {
      color: #059669; /* green-600 */
    }
    #transacciones-container-mobile .value.egreso {
      color: #dc2626; /* red-600 */
    }
    #transacciones-container-mobile .badge {
      display: inline-flex;
      padding-left: 0.5rem;
      padding-right: 0.5rem;
      padding-top: 0.25rem;
      padding-bottom: 0.25rem;
      font-size: 0.75rem; /* text-xs */
      line-height: 1rem;
      font-weight: 600;
      border-radius: 9999px; /* rounded-full */
    }
    #transacciones-container-mobile .badge.ingreso {
      background-color: #d1fae5; /* green-100 */
      color: #065f46; /* green-800 */
    }
    #transacciones-container-mobile .badge.egreso {
      background-color: #fee2e2; /* red-100 */
      color: #991b1b; /* red-800 */
    }
    
    /* Estilos para botones de acción */
    .anular-btn {
      padding: 0.25rem;
      border-radius: 0.375rem;
      transition: all 0.2s ease-in-out;
    }
    
    .anular-btn:hover {
      background-color: #fef2f2; /* red-50 */
    }
    
    .anular-btn:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }
    
    /* Animación de carga */
    @keyframes spin {
      from { transform: rotate(0deg); }
      to { transform: rotate(360deg); }
    }
    
    .animate-spin {
      animation: spin 1s linear infinite;
    }
  </style>
</LayoutProtected>


