---
import LayoutProtected from '@layouts/LayoutProtected.astro';
import Preloader from '@components/Preloader.astro';

const url = new URL(Astro.request.url);
const errorMessage = url.searchParams.get('error');
---

<LayoutProtected title="Nueva Categoría">
  <div class="max-w-2xl mx-auto p-4">
    <div class="bg-white rounded-xl shadow-sm border border-gray-100 p-8">
      <div class="flex justify-between items-center mb-6">
        <h1 class="text-2xl font-bold">Crear Nueva Categoría</h1>
        <a href="/contabilidad/categorias" class="text-gray-600 hover:text-gray-800">&larr; Volver al listado</a>
      </div>

      {errorMessage && (
        <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-6 rounded-md">
          {errorMessage}
        </div>
      )}

      <form id="nueva-categoria-form" method="POST" action="/api/contabilidad/categorias">
        <div class="space-y-6">
          <div>
            <label for="nombre" class="block text-sm font-medium text-gray-700">Nombre de la Categoría</label>
            <input type="text" id="nombre" name="nombre" required class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
          </div>

          <div>
            <label for="tipo" class="block text-sm font-medium text-gray-700">Tipo</label>
            <select id="tipo" name="tipo" required class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md">
              <option value="ingreso">Ingreso</option>
              <option value="egreso">Egreso</option>
            </select>
          </div>

          <div>
            <label for="descripcion" class="block text-sm font-medium text-gray-700">Descripción (Opcional)</label>
            <textarea id="descripcion" name="descripcion" rows="3" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"></textarea>
          </div>
        </div>

        <div class="mt-8 pt-5 border-t border-gray-200">
          <div class="flex justify-end">
            <button type="submit" class="bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
              Guardar Categoría
            </button>
          </div>
        </div>
      </form>
    </div>
  </div>

  <script>
    document.getElementById('nueva-categoria-form')?.addEventListener('submit', async function(event) {
      event.preventDefault();
      // @ts-ignore
      window.showPreloader('Guardando categoría...');

      const form = event.target as HTMLFormElement;
      const formData = new FormData(form);

      try {
        const response = await fetch(form.action, {
          method: 'POST',
          body: formData
        });

        if (response.ok) {
          // @ts-ignore
          window.showPreloaderSuccess('Categoría guardada con éxito');
          setTimeout(() => {
            window.location.href = '/contabilidad/categorias?success=Categoría creada con éxito';
          }, 1000);
        } else if (response.status === 409) {
          // Duplicado
          // @ts-ignore
          window.hidePreloader();
          const err = await response.json().catch(() => ({}));
          alert(err.error || 'Ya existe una categoría con este nombre.');
        } else {
          // Error genérico
          // @ts-ignore
          window.hidePreloader();
          const err = await response.json().catch(() => ({}));
          alert(err.error || 'No se pudo guardar la categoría');
        }
      } catch (error) {
        // @ts-ignore
        window.hidePreloader();
        alert('Error de conexión al intentar guardar la categoría.');
        console.error('Error al guardar categoría:', error);
      }
    });
  </script>

  <Preloader />
</LayoutProtected>
