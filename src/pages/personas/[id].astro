---
// src/pages/personas/[id].astro - Diseño "Focus & Flow" - **VERSIÓN MEJORADA**
import LayoutProtected from "@layouts/LayoutProtected.astro";
import { supabase } from "@lib/supabase";

// --- Lógica de obtención de datos (sin cambios) ---
const { id } = Astro.params;
if (!id) {
  return Astro.redirect('/personas?error='.concat(encodeURIComponent('ID de persona no válido')));
}

// --- Interfaces (sin cambios) ---
interface Sede {
  id: string;
  nombre_sede: string;
  codigo: string;
}
interface Escala {
  id: string;
  nombre_escala: string;
}
interface Ministerio {
  id: string;
  nombre_minist: string;
}
interface Persona {
  id: string;
  nombres: string;
  primer_apellido: string;
  segundo_apellido: string;
  numero_id: string;
  tipo_id: string;
  email: string;
  telefono: string;
  direccion: string;
  url_foto: string | null;
  bautizado: boolean;
  fecha_nacimiento: string;
  genero: string;
  estado_civil: string;
  departamento: string;
  municipio: string;
  created_at: string;
  sedes: Sede | null;
  persona_escala: { escala_de_crecimiento: Escala }[];
  persona_ministerios: { ministerios: Ministerio }[];
}

// --- Lógica de datos (sin cambios) ---
const { data: personaData, error } = await supabase
  .from("persona")
  .select(`*, sedes(*), persona_escala(escala_de_crecimiento(*)), persona_ministerios(ministerios(*))`)
  .eq('id', id)
  .single();

if (error || !personaData) {
  console.error("Error al cargar persona:", error);
  return Astro.redirect('/personas?error='.concat(encodeURIComponent('Persona no encontrada')));
}

const persona = personaData as Persona;

function calcularEdad(fechaNacimiento: string): number | null {
  if (!fechaNacimiento) return null;
  const hoy = new Date();
  const nacimiento = new Date(fechaNacimiento);
  let edad = hoy.getFullYear() - nacimiento.getFullYear();
  const mesActual = hoy.getMonth();
  const mesNacimiento = nacimiento.getMonth();
  if (mesActual < mesNacimiento || (mesActual === mesNacimiento && hoy.getDate() < nacimiento.getDate())) {
    edad--;
  }
  return edad;
}

const escalas = persona.persona_escala?.map(pe => pe.escala_de_crecimiento).filter(Boolean) as Escala[] || [];
const ministerios = persona.persona_ministerios?.map(pm => pm.ministerios).filter(Boolean) as Ministerio[] || [];

const fechaNacimientoFormateada = persona.fecha_nacimiento ? new Date(persona.fecha_nacimiento).toLocaleDateString('es-ES', { year: 'numeric', month: 'long', day: 'numeric' }) : 'No especificada';
const edad = calcularEdad(persona.fecha_nacimiento);
const fechaRegistroFormateada = persona.created_at ? new Date(persona.created_at).toLocaleDateString('es-ES', { year: 'numeric', month: 'long', day: 'numeric' }) : 'No disponible';
const successMessage = Astro.url.searchParams.get("success");
const errorMessage = Astro.url.searchParams.get("error");
---

<LayoutProtected title={`${persona.nombres} ${persona.primer_apellido}`}>
  
  <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-8">

    {successMessage && (
      <div class="bg-teal-100 border-l-4 border-teal-500 text-teal-700 p-4 mb-6 rounded-md shadow-sm" role="alert">
        <p class="font-bold">Éxito</p>
        <p>{successMessage}</p>
      </div>
    )}
    {errorMessage && (
      <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-6 rounded-md shadow-sm" role="alert">
        <p class="font-bold">Error</p>
        <p>{errorMessage}</p>
      </div>
    )}

    <div class="bg-gradient-to-br from-green-500 to-emerald-500 rounded-2xl shadow-xl overflow-hidden mb-8">
      <div class="p-8 md:flex md:items-center md:justify-between space-y-6 md:space-y-0 md:space-x-8 bg-gradient-to-tr from-slate-900/50 to-transparent">
        <div class="flex-1 min-w-0">
          <div class="flex items-center space-x-6">
            <div class="flex-shrink-0">
              {persona.url_foto ? (
                // **FOTO MÁS GRANDE**
                <img class="h-32 w-32 rounded-full object-cover ring-4 ring-slate-200" src={persona.url_foto} alt={`Foto de ${persona.nombres}`} />
              ) : (
                <div class="h-32 w-32 rounded-full bg-slate-700 ring-4 ring-slate-700 flex items-center justify-center">
                  <svg class="h-20 w-20 text-slate-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
                  </svg>
                </div>
              )}
            </div>
            <div>
              <h1 class="text-3xl font-bold text-white leading-tight">{persona.nombres} {persona.primer_apellido} {persona.segundo_apellido || ''}</h1>
              <p class="text-slate-400 font-medium mt-1">{persona.tipo_id}: {persona.numero_id}</p>

            </div>
            
          </div>
        </div>
        <div class="flex flex-wrap gap-3 justify-start md:justify-end">
          {edad !== null && (
            <span class="inline-flex items-center px-3 py-1.5 rounded-full text-sm font-semibold bg-slate-700 text-cyan-300">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd" /></svg>
              {edad} años
            </span>
          )}
          {persona.bautizado ? (
            <span class="inline-flex items-center px-3 py-1.5 rounded-full text-sm font-semibold bg-cyan-500 text-cyan-900">
              <svg xmlns="http://www.w.org/2000/svg" class="h-4 w-4 mr-2" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M6.267 3.455a3.066 3.066 0 001.745-.723 3.066 3.066 0 013.976 0 3.066 3.066 0 001.745.723 3.066 3.066 0 012.812 2.812c.051.643.304 1.254.723 1.745a3.066 3.066 0 010 3.976 3.066 3.066 0 00-.723 1.745 3.066 3.066 0 01-2.812 2.812 3.066 3.066 0 00-1.745.723 3.066 3.066 0 01-3.976 0 3.066 3.066 0 00-1.745-.723 3.066 3.066 0 01-2.812-2.812 3.066 3.066 0 00-.723-1.745 3.066 3.066 0 010-3.976 3.066 3.066 0 00.723-1.745 3.066 3.066 0 012.812-2.812zm7.44 5.252a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" /></svg>
              Bautizado
            </span>
          ) : (
            <span class="inline-flex items-center px-3 py-1.5 rounded-full text-sm font-semibold bg-amber-400 text-amber-900">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" /></svg>
              No Bautizado
            </span>
          )}
        </div>
      </div>
      <div class="border-t border-slate-700 bg-slate-800/50 p-4 flex items-center justify-between">
         <a href="/personas" class="inline-flex items-center text-sm font-medium text-slate-300 hover:text-white transition-colors duration-200">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" /></svg>
          Volver al Directorio
        </a>
        <div class="flex items-center space-x-3">
          <a href={`/personas/${persona.id}/editar`} class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-slate-800 bg-slate-300 hover:bg-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-slate-800 focus:ring-white transition-all duration-200">
            <svg class="w-4 h-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"/></svg>
            Editar
          </a>
          <button onclick={`deletePerson('${persona.id}', '${persona.nombres} ${persona.primer_apellido}')`} class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-slate-800 focus:ring-red-500 transition-all duration-200">
            <svg class="w-4 h-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/></svg>
            Eliminar
          </button>
        </div>
      </div>
    </div>
    
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
      
      <div class="bg-gradient-to-br from-blue-50 to-indigo-100 shadow-lg rounded-xl p-6 border border-slate-200/80 transition-transform duration-300 hover:scale-105 hover:shadow-2xl">
        <h3 class="text-xl font-semibold text-slate-800 mb-4 flex items-center border-b border-slate-500 pb-2 border-solid ">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 mr-3 text-indigo-500" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
            <path stroke-linecap="round" stroke-linejoin="round" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
          </svg>
          Información Personal
        </h3>
        <dl class="space-y-4">
          <div class="flex items-center"><dt class="w-1/3 text-sm font-medium text-slate-500">Género</dt><dd class="w-2/3 text-sm text-slate-900 font-medium">{persona.genero || 'No especificado'}</dd></div>
          <div class="flex items-center"><dt class="w-1/3 text-sm font-medium text-slate-500">Fecha de Nacimiento</dt><dd class="w-2/3 text-sm text-slate-900 font-medium">{fechaNacimientoFormateada}</dd></div>
          <div class="flex items-center"><dt class="w-1/3 text-sm font-medium text-slate-500">Estado Civil</dt><dd class="w-2/3 text-sm text-slate-900 font-medium">{persona.estado_civil || 'No especificado'}</dd></div>
          <div class="flex items-center"><dt class="w-1/3 text-sm font-medium text-slate-500">Fecha de Registro</dt><dd class="w-2/3 text-sm text-slate-900 font-medium">{fechaRegistroFormateada}</dd></div>
        </dl>
      </div>

      <div class="bg-gradient-to-br from-green-50 to-cyan-100 shadow-lg rounded-xl p-6 border border-slate-200/80  transition-transform duration-300 hover:scale-105 hover:shadow-2xl">
        <h3 class="text-xl font-semibold text-slate-800 mb-4 flex items-center border-b border-slate-500 pb-2 border-solid">
           <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 mr-3 text-cyan-500" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
            <path stroke-linecap="round" stroke-linejoin="round" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
          </svg>
          Contacto y Ubicación
        </h3>
        <dl class="space-y-4">
          <div class="flex items-start"><dt class="w-1/3 text-sm font-medium text-slate-500">Email</dt><dd class="w-2/3 text-sm text-slate-900 font-medium break-words">{persona.email || 'No registrado'}</dd></div>
          <div class="flex items-center"><dt class="w-1/3 text-sm font-medium text-slate-500">Teléfono</dt><dd class="w-2/3 text-sm text-slate-900 font-medium">{persona.telefono || 'No registrado'}</dd></div>
          <div class="flex items-center"><dt class="w-1/3 text-sm font-medium text-slate-500">Departamento</dt><dd class="w-2/3 text-sm text-slate-900 font-medium">{persona.departamento || 'No especificado'}</dd></div>
          <div class="flex items-center"><dt class="w-1/3 text-sm font-medium text-slate-500">Municipio</dt><dd class="w-2/3 text-sm text-slate-900 font-medium">{persona.municipio || 'No especificado'}</dd></div>
          <div class="flex items-start"><dt class="w-1/3 text-sm font-medium text-slate-500">Dirección</dt><dd class="w-2/3 text-sm text-slate-900 font-medium">{persona.direccion || 'No especificada'}</dd></div>
        </dl>
      </div>
      
      <div class="bg-gradient-to-br from-amber-50 to-orange-100 shadow-lg rounded-xl p-6 border border-slate-200/80 lg:col-span-2 transition-transform duration-300 hover:scale-105 hover:shadow-2xl">
        <h3 class="text-xl font-semibold text-slate-800 mb-4 flex items-center ">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 mr-3 text-orange-500" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
            <path stroke-linecap="round" stroke-linejoin="round" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          Crecimiento en la Iglesia
        </h3>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
          <div>
            <h4 class="text-sm font-semibold text-slate-600 mb-2">Sede Principal</h4>
            {persona.sedes ? (
              <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-cyan-100 text-cyan-800">{persona.sedes.nombre_sede}</span>
            ) : (
              <p class="text-sm text-slate-500 italic">Sin sede asignada</p>
            )}
          </div>
          <div>
            <h4 class="text-sm font-semibold text-slate-600 mb-2">Escalas de Crecimiento</h4>
            {escalas.length > 0 ? (
              <div class="flex flex-wrap gap-2">
                {escalas.map(escala => <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-green-100 text-green-800">{escala.nombre_escala}</span>)}
              </div>
            ) : (
              <p class="text-sm text-slate-500 italic">Sin escalas asignadas</p>
            )}
          </div>
          <div>
            <h4 class="text-sm font-semibold text-slate-600 mb-2">Ministerios</h4>
             {ministerios.length > 0 ? (
              <div class="flex flex-wrap gap-2">
                {ministerios.map(ministerio => <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800">{ministerio.nombre_minist}</span>)}
              </div>
            ) : (
              <p class="text-sm text-slate-500 italic">No participa en ministerios</p>
            )}
          </div>
        </div>
      </div>
    </div>
  </div>

  <div id="delete-modal" class="fixed inset-0 bg-slate-900 bg-opacity-60 backdrop-blur-sm overflow-y-auto h-full w-full hidden z-50">
    <div class="relative top-20 mx-auto p-5 border w-full max-w-md shadow-lg rounded-xl bg-white">
      <div class="mt-3 text-center">
        <div class="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-red-100">
          <svg class="h-6 w-6 text-red-600" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"/></svg>
        </div>
        <h3 class="text-lg font-medium text-slate-900 mt-4">Confirmar eliminación</h3>
        <div class="mt-2 px-7 py-3">
          <p class="text-sm text-slate-500">
            ¿Estás seguro de que deseas eliminar a <span id="delete-person-name" class="font-semibold"></span>? Esta acción es irreversible.
          </p>
        </div>
        <div class="px-4 py-3 flex justify-center space-x-4">
          <button id="cancel-delete" class="px-4 py-2 bg-slate-200 text-slate-800 text-base font-medium rounded-md w-28 hover:bg-slate-300 focus:outline-none focus:ring-2 focus:ring-slate-400 transition-colors duration-200">
            Cancelar
          </button>
          <button id="confirm-delete" class="px-4 py-2 bg-red-600 text-white text-base font-medium rounded-md w-28 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 transition-colors duration-200">
            Eliminar
          </button>
        </div>
      </div>
    </div>
  </div>

  <script>
    function deletePerson(id, name) {
      const deleteModal = document.getElementById('delete-modal');
      const deletePersonNameSpan = document.getElementById('delete-person-name');
      const confirmDeleteBtn = document.getElementById('confirm-delete');
      const cancelDeleteBtn = document.getElementById('cancel-delete');

      if (deletePersonNameSpan) deletePersonNameSpan.textContent = name;
      if (deleteModal) deleteModal.classList.remove('hidden');
      
      if (confirmDeleteBtn) {
        confirmDeleteBtn.onclick = function() {
          const form = document.createElement('form');
          form.method = 'POST';
          form.action = `/api/personas/${id}/delete`;
          form.innerHTML = `<input type="hidden" name="_method" value="DELETE">`;
          document.body.appendChild(form);
          form.submit();
        };
      }
      
      const closeModal = () => {
        if (deleteModal) deleteModal.classList.add('hidden');
      };

      if (cancelDeleteBtn) cancelDeleteBtn.onclick = closeModal;
      if (deleteModal) {
        deleteModal.onclick = function(e) {
          if (e.target === deleteModal) closeModal();
        };
      }
    }
    window.deletePerson = deletePerson;
  </script>
</LayoutProtected>