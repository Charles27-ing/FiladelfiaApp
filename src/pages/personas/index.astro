---
// src/pages/personas/index.astro - VERSIÓN FINAL CON CONSULTA CORREGIDA
import LayoutProtected from "@layouts/LayoutProtected.astro";
import Preloader from "@components/Preloader.astro";
import { supabase } from "@lib/supabase";

// Definir interfaces para los tipos de datos
interface Sede {
  id: string;
  nombre_sede: string;
  codigo: string;
}

interface Escala {
  id: string;
  nombre_escala: string;
}

interface Ministerio {
  id: string;
  nombre_minist: string;
}

interface Persona {
  id: string;
  nombres: string;
  primer_apellido: string;
  segundo_apellido: string;
  numero_id: string;
  tipo_id: string;
  email: string;
  telefono: string;
  direccion: string;
  url_foto: string | null;
  bautizado: boolean;
  fecha_nacimiento: string;
  genero: string;
  estado_civil: string;
  departamento: string;
  municipio: string;
  sedes: Sede | null;
  persona_escala: { escala_de_crecimiento: Escala }[];
  persona_ministerios: { ministerios: Ministerio }[];
}

// CONSULTA CORREGIDA: Usar los nombres correctos de las tablas
const { data, error } = await supabase
  .from("persona")
  .select(`
    id,
    nombres,
    primer_apellido,
    segundo_apellido,
    numero_id,
    tipo_id,
    email,
    telefono,
    direccion,
    url_foto,
    bautizado,
    fecha_nacimiento,
    genero,
    estado_civil,
    departamento,
    municipio,
    sedes(id, nombre_sede, codigo),
    persona_escala(
      escala_de_crecimiento(id, nombre_escala)
    ),
    persona_ministerios(
      ministerios(id, nombre_minist)
    )
  `)
  .order("created_at", { ascending: false });

// Asegurarse de que `data` es un array de Persona o un array vacío
const personas: Persona[] = (data as Persona[] | null) || [];

if (error) {
  console.error("Error al cargar personas:", error);
  console.error("Detalles del error:", error.message, error.details, error.hint);
}

// Debug: Mostrar cuántas personas se cargaron
console.log(`[DEBUG] Personas cargadas: ${personas.length}`);

// Procesar los datos para agrupar las escalas y ministerios por persona
const personasConEscalasYMinisterios = personas.map(persona => ({
  ...persona,
  escalas: persona.persona_escala
    ?.map(pe => pe.escala_de_crecimiento)
    .filter((escala): escala is Escala => escala !== null) || [],
  ministerios: persona.persona_ministerios
    ?.map(pm => pm.ministerios)
    .filter((ministerio): ministerio is Ministerio => ministerio !== null) || []
})) || [];

console.log(`[DEBUG] Personas procesadas: ${personasConEscalasYMinisterios.length}`);

// Calcular estadísticas
const totalPersonas = personasConEscalasYMinisterios.length;
const personasBautizadas = personasConEscalasYMinisterios.filter(p => p.bautizado).length;
const sedesUnicas = [...new Set(personasConEscalasYMinisterios.map(p => p.sedes?.nombre_sede).filter(Boolean))].length;

// Obtener mensajes de éxito/error de la URL
const successMessage = Astro.url.searchParams.get("success");
const errorMessage = Astro.url.searchParams.get("error");
---

<LayoutProtected title="Gestión de Personas">
  <!-- ====================================================== -->
  <!-- NOTIFICACIONES -->
  <!-- ====================================================== -->
  {successMessage && (
    <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4" role="alert">
      <strong class="font-bold">¡Éxito!</strong>
      <span class="block sm:inline">{successMessage}</span>
    </div>
  )}

  {errorMessage && (
    <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
      <strong class="font-bold">¡Error!</strong>
      <span class="block sm:inline">{errorMessage}</span>
    </div>
  )}

  <!-- ====================================================== -->
  <!-- ENCABEZADO Y ESTADÍSTICAS -->
  <!-- ====================================================== -->
  <div class="bg-white shadow-sm rounded-lg p-6 mb-6">
    <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6">
      <div>
        <h1 class="text-3xl font-bold text-gray-900">Gestión de Personas</h1>
        <p class="mt-2 text-sm text-gray-600">Administra la información de las personas de la iglesia</p>
      </div>
      <a
        href="/personas/nueva"
        class="mt-4 sm:mt-0 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
      >
        <svg class="w-4 h-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"/>
        </svg>
        Nueva Persona
      </a>
    </div>

    <!-- Estadísticas -->
    <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
      <div class="bg-blue-50 p-4 rounded-lg">
        <div class="flex items-center">
          <div class="flex-shrink-0">
            <svg class="h-8 w-8 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM9 9a2 2 0 11-4 0 2 2 0 014 0z"/>
            </svg>
          </div>
          <div class="ml-4">
            <p class="text-sm font-medium text-blue-600">Total Personas</p>
            <p class="text-2xl font-semibold text-blue-900" id="total-count">{totalPersonas}</p>
          </div>
        </div>
      </div>

      <div class="bg-green-50 p-4 rounded-lg">
        <div class="flex items-center">
          <div class="flex-shrink-0">
            <svg class="h-8 w-8 text-green-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
            </svg>
          </div>
          <div class="ml-4">
            <p class="text-sm font-medium text-green-600">Resultados</p>
            <p class="text-2xl font-semibold text-green-900" id="filtered-count">{totalPersonas}</p>
          </div>
        </div>
      </div>

      <div class="bg-yellow-50 p-4 rounded-lg">
        <div class="flex items-center">
          <div class="flex-shrink-0">
            <svg class="h-8 w-8 text-yellow-600" fill="currentColor" viewBox="0 0 20 20">
              <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
            </svg>
          </div>
          <div class="ml-4">
            <p class="text-sm font-medium text-yellow-600">Bautizados</p>
            <p class="text-2xl font-semibold text-yellow-900">{personasBautizadas}</p>
          </div>
        </div>
      </div>

      <div class="bg-purple-50 p-4 rounded-lg">
        <div class="flex items-center">
          <div class="flex-shrink-0">
            <svg class="h-8 w-8 text-purple-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"/>
            </svg>
          </div>
          <div class="ml-4">
            <p class="text-sm font-medium text-purple-600">Sedes Activas</p>
            <p class="text-2xl font-semibold text-purple-900">{sedesUnicas}</p>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- ====================================================== -->
  <!-- FILTROS Y BÚSQUEDA (COMPACTADO) -->
  <!-- ====================================================== -->
  <div class="bg-white shadow-sm rounded-lg p-6 mb-6">
    <div class="grid grid-cols-1 md:grid-cols-4 gap-4 items-end">
      <!-- Búsqueda -->
      <div class="md:col-span-2">
        <label for="search" class="block text-sm font-medium text-gray-700 mb-2">
          Buscar personas
        </label>
        <div class="relative">
          <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
            <svg class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
            </svg>
          </div>
          <input
            type="text"
            id="search"
            class="block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-1 focus:ring-blue-500 focus:border-blue-500"
            placeholder="Buscar por nombre, email, teléfono, departamento..."
          />
        </div>
      </div>

      <!-- Filtro por sede -->
      <div>
        <label for="sede_filter" class="block text-sm font-medium text-gray-700 mb-2">
          Filtrar por sede
        </label>
        <select
          id="sede_filter"
          class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
        >
          <option value="">Todas las sedes</option>
        </select>
      </div>

      <!-- Botón limpiar filtros (EN LA MISMA FILA) -->
      <div>
        <button
          id="clear_filters"
          type="button"
          class="w-full inline-flex items-center justify-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
        >
          <svg class="w-4 h-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
          </svg>
          Limpiar
        </button>
      </div>
    </div>
  </div>

  <!-- ====================================================== -->
  <!-- TABLA DE PERSONAS (DESKTOP) -->
  <!-- ====================================================== -->
  <div class="hidden md:block bg-white shadow-sm rounded-lg overflow-hidden">
    <div class="overflow-x-auto">
      <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
          <tr>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Información Personal
            </th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Identificación
            </th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Ubicación
            </th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Ministerios y Escalas
            </th>
            <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
              Acciones
            </th>
          </tr>
        </thead>
        <tbody id="personas-container" class="bg-white divide-y divide-gray-200">
          <!-- Las filas se generarán dinámicamente con JavaScript -->
        </tbody>
      </table>
    </div>
  </div>
  <!-- ✅ PASO 1: AÑADIR CONTROLES DE PAGINACIÓN -->
<div id="pagination-controls" class="mt-6 flex items-center justify-between border-t border-gray-200 px-4 py-3 sm:px-6">
  <div class="flex flex-1 justify-between sm:hidden">
    <button id="prev-btn-mobile" class="relative inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50">
      Anterior
    </button>
    <button id="next-btn-mobile" class="relative ml-3 inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50">
      Siguiente
    </button>
  </div>
  <div class="hidden sm:flex sm:flex-1 sm:items-center sm:justify-between">
    <div>
      <p class="text-sm text-gray-700">
        Mostrando del
        <span id="pagination-from" class="font-medium">1</span>
        al
        <span id="pagination-to" class="font-medium">10</span>
        de
        <span id="pagination-total" class="font-medium">0</span>
        resultados
      </p>
    </div>
    <div>
      <nav class="isolate inline-flex -space-x-px rounded-md shadow-sm" aria-label="Pagination">
        <button id="prev-btn-desktop" class="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0">
          <span class="sr-only">Anterior</span>
          <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
            <path fill-rule="evenodd" d="M12.79 5.23a.75.75 0 01-.02 1.06L8.832 10l3.938 3.71a.75.75 0 11-1.04 1.08l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 011.06.02z" clip-rule="evenodd" />
          </svg>
        </button>
        <!-- Los números de página se podrían generar dinámicamente, pero por ahora usamos solo Anterior/Siguiente -->
        <button id="next-btn-desktop" class="relative inline-flex items-center rounded-r-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0">
          <span class="sr-only">Siguiente</span>
          <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
            <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" />
          </svg>
        </button>
      </nav>
    </div>
  </div>
</div>

  <!-- ====================================================== -->
  <!-- VISTA MÓVIL (CARDS) -->
  <!-- ====================================================== -->
  <div class="md:hidden" id="personas-container-mobile">
    <!-- Las tarjetas se generarán dinámicamente con JavaScript -->
  </div>

  <!-- ====================================================== -->
  <!-- MODAL DE CONFIRMACIÓN DE ELIMINACIÓN -->
  <!-- ====================================================== -->
  <div id="delete-modal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden z-50">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
      <div class="mt-3 text-center">
        <div class="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-red-100">
          <svg class="h-6 w-6 text-red-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"/>
          </svg>
        </div>
        <h3 class="text-lg font-medium text-gray-900 mt-2">Confirmar eliminación</h3>
        <div class="mt-2 px-7 py-3">
          <p class="text-sm text-gray-500">
            ¿Estás seguro de que deseas eliminar a <span id="delete-person-name" class="font-semibold"></span>?
            Esta acción no se puede deshacer.
          </p>
        </div>
        <div class="items-center px-4 py-3">
          <button
            id="confirm-delete"
            class="px-4 py-2 bg-red-500 text-white text-base font-medium rounded-md w-24 mr-2 hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-300"
          >
            Eliminar
          </button>
          <button
            id="cancel-delete"
            class="px-4 py-2 bg-gray-500 text-white text-base font-medium rounded-md w-24 hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-gray-300"
          >
            Cancelar
          </button>
        </div>
      </div>
    </div>
  </div>

  <!-- ====================================================== -->
  <!-- SCRIPTS -->

  <script type="module" define:vars={{ personasConEscalasYMinisterios }}>
    import { initializePersonasFilters } from '/src/scripts/personas-filters.js';
    import { initializePersonasActions, viewPerson, editPerson, deletePerson } from '/src/scripts/personas-actions.js';
    
    // ✅ EXPONER FUNCIONES A WINDOW (ESTO ES LO QUE FALTABA)
    window.viewPerson = viewPerson;
    window.editPerson = editPerson;
    window.deletePerson = deletePerson;
    
    // Datos de personas desde Astro
    window.personasData = personasConEscalasYMinisterios;
  
    // ✅ INICIALIZAR CON DOMContentLoaded (ESTADO ORIGINAL)
    document.addEventListener('DOMContentLoaded', function() {
      console.log('DOM cargado, inicializando filtros y acciones...');
      console.log('Datos de personas:', window.personasData);
      
      // Inicializar filtros y acciones
      initializePersonasFilters(window.personasData);
      initializePersonasActions();
      
      console.log('Inicialización completada');
    });
  </script>

  <Preloader />
</LayoutProtected>
