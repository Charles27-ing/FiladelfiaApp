---

// src/pages/personas/index.astro - VERSIÓN CORREGIDA PARA ASTRO
import LayoutProtected from "@layouts/LayoutProtected.astro";
import { supabase } from "@lib/supabase";


// Definir interfaces para los tipos de datos
interface Sede {
  id: string;
  nombre_sede: string;
  codigo: string;
}

interface Escala {
  id: string;
  nombre_escala: string;
}

interface Persona {
  id: string;
  nombres: string;
  primer_apellido: string;
  segundo_apellido: string;
  numero_id: string;
  tipo_id: string;
  email: string;
  telefono: string;
  direccion: string;
  url_foto: string | null;
  bautizado: boolean;
  sedes: Sede | null;
  persona_escala: { escala_de_crecimiento: Escala }[];
  // Nuevos campos
  fecha_nacimiento: string;
  edad: number;
  genero: string;
  estado_civil: string;
  departamento: string;
  municipio: string;
}

// CONSULTA: Incluir el campo bautizado y los nuevos campos
const { data, error } = await supabase
  .from("persona")
  .select(`
    id,
    nombres,
    primer_apellido,
    segundo_apellido,
    numero_id,
    tipo_id,
    email,
    telefono,
    direccion,
    url_foto,
    bautizado,
    fecha_nacimiento,
    edad,
    genero,
    estado_civil,
    departamento,
    municipio,
    sedes(id, nombre_sede, codigo),
    persona_escala(
      escala_de_crecimiento(id, nombre_escala)
    )
  `)
  .order("created_at", { ascending: false });

// Asegurarse de que `data` es un array de Persona o un array vacío
const personas: Persona[] = (data as Persona[] | null) || [];

if (error) {
  console.error("Error al cargar personas:", error);
  console.error("Detalles del error:", error.message, error.details, error.hint);
}

// Debug: Mostrar cuántas personas se cargaron
console.log(`[DEBUG] Personas cargadiñas: ${personas.length}`);

// Procesar los datos para agrupar las escalas por persona
const personasConEscalas = personas.map(persona => ({
  ...persona,
  escalas: persona.persona_escala
    ?.map(pe => pe.escala_de_crecimiento)
    .filter((escala): escala is Escala => escala !== null) || []
})) || [];

console.log(`[DEBUG] Personas procesadas: ${personasConEscalas.length}`);

// Obtener mensajes de éxito/error de la URL
const successMessage = Astro.url.searchParams.get("success");
const errorMessage = Astro.url.searchParams.get("error");
---

<LayoutProtected title="Gestión de Personas">
  <!-- ====================================================== -->
  <!-- NOTIFICACIONES -->
  <!-- ====================================================== -->
  {successMessage && (
    <div
      class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4"
      role="alert"
    >
      <strong class="font-bold">Éxito!</strong>
      <span class="block sm:inline"> {decodeURIComponent(successMessage)}</span>
    </div>
  )}
  {errorMessage && (
    <div
      class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4"
      role="alert"
    >
      <strong class="font-bold">Error!</strong>
      <span class="block sm:inline"> {decodeURIComponent(errorMessage)}</span>
    </div>
  )}

  <!-- ====================================================== -->
  <!-- HEADER DE LA PÁGINA -->
  <!-- ====================================================== -->
  <div class="sm:flex sm:items-center sm:justify-between mb-8">
    <div>
      <h1 class="text-2xl font-bold leading-6 text-gray-900">Directorio de Personas</h1>
      <p class="mt-2 text-sm text-gray-700">
        Gestiona la información de los miembros y visitantes de la congregación
      </p>
    </div>
  </div>

  <!-- ====================================================== -->
  <!-- BARRA DE BÚSQUEDA Y FILTROS -->
  <!-- ====================================================== -->
  <div class="mb-6 bg-white rounded-lg shadow-sm border border-gray-200 p-4">
    <div class="grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4">
      <!-- Búsqueda por texto -->
      <div class="sm:col-span-2">
        <label for="search-input" class="block text-sm font-medium text-gray-700 mb-1">
          Buscar persona
        </label>
        <div class="relative">
          <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
            <svg class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
            </svg>
          </div>
          <input
            type="text"
            id="search-input"
            placeholder="Buscar por nombre, apellido o identificación..."
            class="block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-1 focus:ring-green-500 focus:border-green-500 sm:text-sm transition-colors"
          />
        </div>
      </div>

      <!-- Filtro por sede -->
      <div>
        <label for="sede-filter" class="block text-sm font-medium text-gray-700 mb-1">
          Filtrar por sede
        </label>
        <select
          id="sede-filter"
          class="block w-full px-3 py-2 border border-gray-300 rounded-md leading-5 bg-white focus:outline-none focus:ring-1 focus:ring-green-500 focus:border-green-500 sm:text-sm transition-colors"
        >
          <option value="">Todas las sedes</option>
          <!-- Las opciones se llenarán dinámicamente con JavaScript -->
        </select>
      </div>

      <!-- Botón de limpiar filtros -->
      <div class="flex items-end">
        <button
          type="button"
          id="clear-filters"
          class="w-full inline-flex items-center justify-center px-3 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-1 focus:ring-green-500 focus:border-green-500 transition-colors"
        >
          <svg class="-ml-0.5 mr-1.5 h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"/>
          </svg>
          Limpiar
        </button>
      </div>
    </div>

    <!-- Estadísticas rápidas -->
    <div class="mt-4 pt-4 border-t border-gray-200">
      <div class="grid grid-cols-1 gap-4 sm:grid-cols-3">
        <div class="text-center">
          <div class="text-2xl font-bold text-green-600" id="total-personas">{personasConEscalas.length}</div>
          <div class="text-sm text-gray-500">Total de personas</div>
        </div>
        <div class="text-center">
          <div class="text-2xl font-bold text-blue-600" id="personas-filtradas">{personasConEscalas.length}</div>
          <div class="text-sm text-gray-500">Resultados mostrados</div>
        </div>
        <div class="text-center">
          <div class="text-2xl font-bold text-purple-600" id="sedes-activas">
            {[...new Set(personasConEscalas.map(p => p.sedes?.nombre_sede))].length}
          </div>
          <div class="text-sm text-gray-500">Sedes activas</div>
        </div>
      </div>
    </div>
  </div>

  <!-- ====================================================== -->
  <!-- TABLA DE PERSONAS (DESKTOP) -->
  <!-- ====================================================== -->
  <div class="hidden md:block bg-white shadow-md rounded-lg overflow-hidden">
    <table class="min-w-full divide-y divide-gray-200">
      <thead class="bg-gray-50">
        <tr>
          <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
            Foto
          </th>
          <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
            Nombre Completo
          </th>
          <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
            Identificación
          </th>
          <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
            Sede
          </th>
          <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
            Escalas
          </th>
          <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
            Contacto
          </th>
          <th scope="col" class="relative px-6 py-3">
            <span class="sr-only">Acciones</span>
          </th>
        </tr>
      </thead>
      <tbody id="personas-table-body" class="bg-white divide-y divide-gray-200">
        <!-- Las filas se generarán dinámicamente con JavaScript -->
      </tbody>
    </table>
  </div>

  <!-- ====================================================== -->
  <!-- VISTA DE TARJETAS (MÓVIL) -->
  <!-- ====================================================== -->
  <div class="lg:hidden space-y-4" id="personas-cards-container">
    <!-- Las tarjetas se generarán dinámicamente con JavaScript -->
  </div>

  <!-- ====================================================== -->
  <!-- MODAL DE CONFIRMACIÓN DE ELIMINACIÓN -->
  <!-- ====================================================== -->
  <div id="delete-modal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden z-50">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
      <div class="mt-3 text-center">
        <div class="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-red-100">
          <svg class="h-6 w-6 text-red-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"/>
          </svg>
        </div>
        <h3 class="text-lg leading-6 font-medium text-gray-900 mt-4">Confirmar Eliminación</h3>
        <div class="mt-2 px-7 py-3">
          <p class="text-sm text-gray-500">
            ¿Estás seguro de que deseas eliminar a <span id="delete-person-name" class="font-semibold"></span>?
            Esta acción no se puede deshacer.
          </p>
        </div>
        <div class="items-center px-4 py-3">
          <button
            id="confirm-delete"
            class="px-4 py-2 bg-red-500 text-white text-base font-medium rounded-md w-24 mr-2 hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-300"
          >
            Eliminar
          </button>
          <button
            id="cancel-delete"
            class="px-4 py-2 bg-gray-500 text-white text-base font-medium rounded-md w-24 hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-gray-300"
          >
            Cancelar
          </button>
        </div>
      </div>
    </div>
  </div>

  <!-- ====================================================== -->
  <!-- SCRIPTS - VERSIÓN CORREGIDA PARA ASTRO -->
  <!-- ====================================================== -->
  <script>
    // Importar las funciones desde los módulos
    import { initializePersonasFilters } from 'src/scripts/personas-filters.js';
    import { initializePersonasActions, viewPerson, editPerson, deletePerson } from 'src/scripts/personas-actions.js';

    // Hacer las funciones disponibles globalmente para los onclick
    window.viewPerson = viewPerson;
    window.editPerson = editPerson;
    window.deletePerson = deletePerson;

    // Datos de personas pasados desde Astro
    const personasDataElement = document.getElementById('personas-data');
const personasData = personasDataElement ? JSON.parse(personasDataElement.textContent || '[]') : [];

    // Inicializar cuando el DOM esté listo
    document.addEventListener('DOMContentLoaded', function() {
      console.log('DOM cargado, inicializando aplicación...');
      console.log('Datos de personas disponibles:', personasData.length);

      // Inicializar filtros y acciones
      try {
        initializePersonasFilters(personasData);
        initializePersonasActions();
        console.log('Aplicación inicializada correctamente');
      } catch (error) {
        console.error('Error al inicializar la aplicación:', error);
      }
    });
  </script>

  <!-- Datos JSON para JavaScript -->
  <script id="personas-data" type="application/json" set:html={JSON.stringify(personasConEscalas)}></script>
</LayoutProtected>

