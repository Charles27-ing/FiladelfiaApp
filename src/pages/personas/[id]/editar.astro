---
// src/pages/personas/[id]/editar.astro - VERSIÓN OPTIMIZADA CON MANEJO SIMPLIFICADO DE FOTOS
import LayoutProtected from "@/layouts/LayoutProtected.astro";
import { supabase } from "@/lib/supabase";
import type { Departamento } from "@/models/persona.model";

// Cargar datos de Colombia (departamentos y municipios)
import colombiaData from "@/data/colombia.json";
const departamentos: Departamento[] = colombiaData.map((dept: any) => ({
    id: dept.id.toString(),
    nombre: dept.departamento,
    ciudades: dept.ciudades.map((ciudad: string, index: number) => ({
        id: `${dept.id}-${index}`,
        nombre: ciudad,
    })),
}));

// Obtener el ID de la persona desde la URL
const { id } = Astro.params;

if (!id) {
  return Astro.redirect('/personas?error=' + encodeURIComponent('ID de persona no válido'));
}

// Definir interfaces
interface Sede {
  id: string;
  nombre_sede: string;
  codigo: string;
}

interface Escala {
  id: string;
  nombre_escala: string;
}

interface Ministerio {
  id: string;
  nombre_minist: string;
}

interface Persona {
  id: string;
  nombres: string;
  primer_apellido: string;
  segundo_apellido: string;
  numero_id: string;
  tipo_id: string;
  email: string;
  telefono: string;
  direccion: string;
  url_foto: string | null;
  bautizado: boolean;
  fecha_nacimiento: string;
  genero: string;
  estado_civil: string;
  departamento: string;
  municipio: string;
  sedes: Sede | null;
  persona_escala: { escala_de_crecimiento: Escala }[];
  persona_ministerios: { ministerios: Ministerio }[];
}

// Consultar los datos de la persona específica
const { data: personaData, error } = await supabase
  .from("persona")
  .select(`
    id,
    nombres,
    primer_apellido,
    segundo_apellido, 
    numero_id,
    tipo_id,
    email,
    telefono,
    direccion,
    genero,
    fecha_nacimiento,
    url_foto,
    bautizado,
    estado_civil,
    departamento,
    municipio,
    sedes(id, nombre_sede, codigo),
    persona_escala(
      escala_de_crecimiento(id, nombre_escala)
    ),
    persona_ministerios(
      ministerios(id, nombre_minist)
    )
  `)
  .eq('id', id)
  .single();

if (error || !personaData) {
  console.error("Error al cargar persona:", error);
  return Astro.redirect('/personas?error=' + encodeURIComponent('Persona no encontrada'));
}

const persona = personaData as Persona;

// Obtener todas las sedes para el select
const { data: sedesData } = await supabase
  .from("sedes")
  .select("id, nombre_sede")
  .order("nombre_sede");

const sedes = sedesData || [];

// Obtener todas las escalas para el select
const { data: escalasData } = await supabase
  .from("escala_de_crecimiento")
  .select("id, nombre_escala")
  .order("nombre_escala");

const escalas = escalasData || [];

// Obtener todos los ministerios para el select
const { data: ministeriosData } = await supabase
  .from("ministerios")
  .select("id, nombre_minist")
  .order("nombre_minist");

const ministerios = ministeriosData || [];

// Formatear fecha para input date
const fechaNacimientoFormatted = persona.fecha_nacimiento 
  ? new Date(persona.fecha_nacimiento).toISOString().split('T')[0]
  : '';

// Obtener escalas y ministerios actuales de la persona
const escalasActuales = persona.persona_escala?.map(pe => pe.escala_de_crecimiento?.id).filter(Boolean) || [];
const ministeriosActuales = persona.persona_ministerios?.map(pm => pm.ministerios?.id).filter(Boolean) || [];

// Obtener mensajes de éxito/error de la URL
const successMessage = Astro.url.searchParams.get("success");
const errorMessage = Astro.url.searchParams.get("error");
---

<LayoutProtected title={`Editar - ${persona.nombres} ${persona.primer_apellido}`}>
  <!-- ====================================================== -->
  <!-- NOTIFICACIONES -->
  <!-- ====================================================== -->
  {successMessage && (
    <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4" role="alert">
      <strong class="font-bold">¡Éxito!</strong>
      <span class="block sm:inline">{successMessage}</span>
    </div>
  )}

  {errorMessage && (
    <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
      <strong class="font-bold">¡Error!</strong>
      <span class="block sm:inline">{errorMessage}</span>
    </div>
  )}

  <!-- ====================================================== -->
  <!-- NAVEGACIÓN -->
  <!-- ====================================================== -->
  <div class="mb-6">
    <nav class="flex" aria-label="Breadcrumb">
      <ol class="inline-flex items-center space-x-1 md:space-x-3">
        <li class="inline-flex items-center">
          <a href="/personas" class="inline-flex items-center text-sm font-medium text-gray-700 hover:text-blue-600 transition-colors">
            <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
              <path d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"/>
            </svg>
            Directorio de Personas
          </a>
        </li>
        <li>
          <div class="flex items-center">
            <svg class="w-6 h-6 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"/>
            </svg>
            <a href={`/personas/${persona.id}`} class="ml-1 text-sm font-medium text-gray-700 hover:text-blue-600 md:ml-2 transition-colors">
              {persona.nombres} {persona.primer_apellido}
            </a>
          </div>
        </li>
        <li>
          <div class="flex items-center">
            <svg class="w-6 h-6 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"/>
            </svg>
            <span class="ml-1 text-sm font-medium text-gray-500 md:ml-2">Editar</span>
          </div>
        </li>
      </ol>
    </nav>
  </div>

  <!-- ====================================================== -->
  <!-- FORMULARIO DE EDICIÓN MODERNO -->
  <!-- ====================================================== -->
  <div class="bg-white shadow-xl rounded-2xl overflow-hidden">
    <!-- Encabezado con gradiente -->
    <div class="bg-gradient-to-r from-blue-600 via-blue-700 to-indigo-700 px-8 py-6">
      <div class="flex items-center space-x-3">
        <div class="p-2 bg-white/20 rounded-lg">
          <svg class="w-6 h-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"/>
          </svg>
        </div>
        <div>
          <h1 class="text-2xl font-bold text-white">
            Editar Información
          </h1>
          <p class="text-blue-100 text-sm">
            {persona.nombres} {persona.primer_apellido} {persona.segundo_apellido || ''}
          </p>
        </div>
      </div>
    </div>

    <form action={`/api/personas/${persona.id}/update`} method="POST" enctype="multipart/form-data" class="p-8">
      <div class="grid grid-cols-1 xl:grid-cols-4 gap-8">
        
        <!-- ====================================================== -->
        <!-- COLUMNA PRINCIPAL: FORMULARIO (3/4 del ancho) -->
        <!-- ====================================================== -->
        <div class="xl:col-span-3 space-y-8">
          
          <!-- ✅ 1. IDENTIFICACIÓN (MOVIDA ARRIBA) -->
          <div class="bg-gradient-to-br from-green-50 to-emerald-50 rounded-xl p-6 border border-green-100">
            <div class="flex items-center space-x-3 mb-6">
              <div class="p-2 bg-green-100 rounded-lg">
                <svg class="w-5 h-5 text-green-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V8a2 2 0 00-2-2h-5m-4 0V4a2 2 0 012-2h2a2 2 0 012 2v2m-4 0a2 2 0 012-2h2a2 2 0 012 2v2m-4 0v6m-4-6v6"/>
                </svg>
              </div>
              <h2 class="text-xl font-semibold text-gray-900">Identificación</h2>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div>
                <label for="tipo_id" class="block text-sm font-medium text-gray-700 mb-2">
                  Tipo de Documento *
                </label>
                <select
                  id="tipo_id"
                  name="tipo_id"
                  required
                  class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500 transition-all duration-200"
                >
                  <option value="CC" selected={persona.tipo_id === 'CC'}>Cédula de Ciudadanía</option>
                  <option value="TI" selected={persona.tipo_id === 'TI'}>Tarjeta de Identidad</option>
                  <option value="RC" selected={persona.tipo_id === 'RC'}>Registro Civil</option>
                  <option value="CE" selected={persona.tipo_id === 'CE'}>Cédula de Extranjería</option>
                </select>
              </div>

              <div>
                <label for="numero_id" class="block text-sm font-medium text-gray-700 mb-2">
                  Número de Identificación *
                </label>
                <input
                  type="text"
                  id="numero_id"
                  name="numero_id"
                  value={persona.numero_id}
                  required
                  class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500 transition-all duration-200"
                  placeholder="Número de documento"
                />
              </div>
            </div>
          </div>

          <!-- 2. Información Personal Básica -->
          <div class="bg-gradient-to-br from-blue-50 to-indigo-50 rounded-xl p-6 border border-blue-100">
            <div class="flex items-center space-x-3 mb-6">
              <div class="p-2 bg-blue-100 rounded-lg">
                <svg class="w-5 h-5 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
                </svg>
              </div>
              <h2 class="text-xl font-semibold text-gray-900">Información Personal</h2>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div>
                <label for="nombres" class="block text-sm font-medium text-gray-700 mb-2">
                  Nombres *
                </label>
                <input
                  type="text"
                  id="nombres"
                  name="nombres"
                  value={persona.nombres}
                  required
                  class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200"
                  placeholder="Nombres completos"
                />
              </div>

              <div>
                <label for="primer_apellido" class="block text-sm font-medium text-gray-700 mb-2">
                  Primer Apellido *
                </label>
                <input
                  type="text"
                  id="primer_apellido"
                  name="primer_apellido"
                  value={persona.primer_apellido}
                  required
                  class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200"
                  placeholder="Primer apellido"
                />
              </div>

              <div>
                <label for="segundo_apellido" class="block text-sm font-medium text-gray-700 mb-2">
                  Segundo Apellido
                </label>
                <input
                  type="text"
                  id="segundo_apellido"
                  name="segundo_apellido"
                  value={persona.segundo_apellido || ''}
                  class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200"
                  placeholder="Segundo apellido (opcional)"
                />
              </div>

              <div>
                <label for="genero" class="block text-sm font-medium text-gray-700 mb-2">
                  Género
                </label>
                <select
                  id="genero"
                  name="genero"
                  class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200"
                >
                  <option value="">Seleccionar...</option>
                  <option value="Masculino" selected={persona.genero === 'Masculino'}>Masculino</option>
                  <option value="Femenino" selected={persona.genero === 'Femenino'}>Femenino</option>
                </select>
              </div>

              <div>
                <label for="fecha_nacimiento" class="block text-sm font-medium text-gray-700 mb-2">
                  Fecha de Nacimiento
                </label>
                <input
                  type="date"
                  id="fecha_nacimiento"
                  name="fecha_nacimiento"
                  value={fechaNacimientoFormatted}
                  class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200"
                />
              </div>

              <div>
                <label for="estado_civil" class="block text-sm font-medium text-gray-700 mb-2">
                  Estado Civil
                </label>
                <select
                  id="estado_civil"
                  name="estado_civil"
                  class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200"
                >
                  <option value="">Seleccionar...</option>
                  <option value="SOLTERO(A)" selected={persona.estado_civil === 'SOLTERO(A)'}>Soltero(a)</option>
                  <option value="CASADO(A)" selected={persona.estado_civil === 'CASADO(A)'}>Casado(a)</option>
                  <option value="UNION-LIBRE" selected={persona.estado_civil === 'UNION-LIBRE'}>Unión Libre</option>
                  <option value="VIUDO(A)" selected={persona.estado_civil === 'VIUDO(A)'}>Viudo(a)</option>
                </select>
              </div>
            </div>
          </div>

          <!-- Información de Contacto -->
          <div class="bg-gradient-to-br from-purple-50 to-violet-50 rounded-xl p-6 border border-purple-100">
            <div class="flex items-center space-x-3 mb-6">
              <div class="p-2 bg-purple-100 rounded-lg">
                <svg class="w-5 h-5 text-purple-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
                </svg>
              </div>
              <h2 class="text-xl font-semibold text-gray-900">Información de Contacto</h2>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div>
                <label for="email" class="block text-sm font-medium text-gray-700 mb-2">
                  Email *
                </label>
                <input
                  type="email"
                  id="email"
                  name="email"
                  value={persona.email}
                  required
                  class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-all duration-200"
                  placeholder="correo@ejemplo.com"
                />
              </div>

              <div>
                <label for="telefono" class="block text-sm font-medium text-gray-700 mb-2">
                  Teléfono *
                </label>
                <input
                  type="tel"
                  id="telefono"
                  name="telefono"
                  value={persona.telefono}
                  required
                  class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-all duration-200"
                  placeholder="3001234567"
                />
              </div>

              <div class="md:col-span-2">
                <label for="direccion" class="block text-sm font-medium text-gray-700 mb-2">
                  Dirección
                </label>
                <textarea
                  id="direccion"
                  name="direccion"
                  rows="3"
                  class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-all duration-200"
                  placeholder="Dirección completa"
                >{persona.direccion || ''}</textarea>
              </div>
            </div>
          </div>

          <!-- ✅ UBICACIÓN Y SEDE (CON DEPARTAMENTOS DINÁMICOS) -->
          <div class="bg-gradient-to-br from-orange-50 to-amber-50 rounded-xl p-6 border border-orange-100">
            <div class="flex items-center space-x-3 mb-6">
              <div class="p-2 bg-orange-100 rounded-lg">
                <svg class="w-5 h-5 text-orange-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"/>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"/>
                </svg>
              </div>
              <h2 class="text-xl font-semibold text-gray-900">Ubicación y Sede</h2>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
              <div>
                <label for="departamento" class="block text-sm font-medium text-gray-700 mb-2">
                  Departamento
                </label>
                <select
                  id="departamento"
                  name="departamento"
                  class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-orange-500 transition-all duration-200"
                >
                  <option value="">Seleccione departamento...</option>
                  {departamentos.map((dept) => (
                    <option value={dept.nombre} selected={persona.departamento === dept.nombre}>
                      {dept.nombre}
                    </option>
                  ))}
                </select>
              </div>

              <div>
                <label for="municipio" class="block text-sm font-medium text-gray-700 mb-2">
                  Municipio
                </label>
                <select
                  id="municipio"
                  name="municipio"
                  class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-orange-500 transition-all duration-200"
                >
                  <option value="">Seleccione municipio...</option>
                  <!-- Se llenarán dinámicamente con JavaScript -->
                </select>
              </div>

              <div>
                <label for="sede_id" class="block text-sm font-medium text-gray-700 mb-2">
                  Sede
                </label>
                <select
                  id="sede_id"
                  name="sede_id"
                  class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-orange-500 transition-all duration-200"
                >
                  <option value="">Sin sede asignada</option>
                  {sedes.map((sede) => (
                    <option 
                      value={sede.id} 
                      selected={persona.sedes?.id === sede.id}
                    >
                      {sede.nombre_sede}
                    </option>
                  ))}
                </select>
              </div>
            </div>
          </div>

          <!-- ✅ ESCALAS Y MINISTERIOS -->
          <div class="bg-gradient-to-br from-teal-50 to-cyan-50 rounded-xl p-6 border border-teal-100">
            <div class="flex items-center space-x-3 mb-6">
              <div class="p-2 bg-teal-100 rounded-lg">
                <svg class="w-5 h-5 text-teal-600" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                </svg>
              </div>
              <h2 class="text-xl font-semibold text-gray-900">Información Espiritual</h2>
            </div>

            <!-- Estado de Bautismo -->
            <div class="mb-6">
              <label class="block text-sm font-medium text-gray-700 mb-3">
                ¿Está Bautizado?
              </label>
              <div class="flex items-center space-x-6">
                <label class="inline-flex items-center">
                  <input
                    type="radio"
                    name="bautizado"
                    value="true"
                    checked={persona.bautizado}
                    class="form-radio text-teal-600 focus:ring-teal-500"
                  />
                  <span class="ml-2 text-gray-700">Sí</span>
                </label>
                <label class="inline-flex items-center">
                  <input
                    type="radio"
                    name="bautizado"
                    value="false"
                    checked={!persona.bautizado}
                    class="form-radio text-red-600 focus:ring-red-500"
                  />
                  <span class="ml-2 text-gray-700">No</span>
                </label>
              </div>
            </div>

            <!-- Escalas de Crecimiento -->
            <div class="mb-6">
              <label class="block text-sm font-medium text-gray-700 mb-3">
                Escalas de Crecimiento
              </label>
              <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3 max-h-48 overflow-y-auto border border-gray-200 rounded-lg p-4 bg-white">
                {escalas.map((escala) => (
                  <label class="inline-flex items-center">
                    <input
                      type="checkbox"
                      name="escalas"
                      value={escala.id}
                      checked={escalasActuales.includes(escala.id)}
                      class="form-checkbox text-teal-600 focus:ring-teal-500"
                    />
                    <span class="ml-2 text-gray-700 text-sm">{escala.nombre_escala}</span>
                  </label>
                ))}
              </div>
            </div>

            <!-- Ministerios -->
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-3">
                Ministerios
              </label>
              <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3 max-h-48 overflow-y-auto border border-gray-200 rounded-lg p-4 bg-white">
                {ministerios.map((ministerio) => (
                  <label class="inline-flex items-center">
                    <input
                      type="checkbox"
                      name="ministerios"
                      value={ministerio.id}
                      checked={ministeriosActuales.includes(ministerio.id)}
                      class="form-checkbox text-teal-600 focus:ring-teal-500"
                    />
                    <span class="ml-2 text-gray-700 text-sm">{ministerio.nombre_minist}</span>
                  </label>
                ))}
              </div>
            </div>
          </div>
        </div>

        <!-- ====================================================== -->
        <!-- COLUMNA LATERAL: FOTO DE PERFIL SIMPLIFICADA (1/4 del ancho) -->
        <!-- ====================================================== -->
        <div class="xl:col-span-1">
          <div class="bg-gradient-to-br from-gray-50 to-slate-50 rounded-xl p-6 border border-gray-200 sticky top-6">
            <div class="flex items-center space-x-3 mb-6">
              <div class="p-2 bg-gray-100 rounded-lg">
                <svg class="w-5 h-5 text-gray-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
              </div>
              <h2 class="text-lg font-semibold text-gray-900">Foto de Perfil</h2>
            </div>

            <!-- Vista previa de la imagen -->
            <div class="mb-6">
              <div id="image-preview-container" class="w-full aspect-square bg-gray-100 rounded-xl flex items-center justify-center overflow-hidden border-2 border-dashed border-gray-300 transition-all duration-300 hover:border-gray-400">
                {persona.url_foto ? (
                  <img 
                    id="image-preview" 
                    src={persona.url_foto} 
                    alt="Foto actual" 
                    class="w-full h-full object-cover rounded-xl"
                  />
                ) : (
                  <div id="default-avatar" class="text-center">
                    <svg class="w-16 h-16 text-gray-400 mx-auto mb-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
                    </svg>
                    <p class="text-sm text-gray-500">Sin foto</p>
                  </div>
                )}
              </div>
            </div>

            <!-- ✅ SOLO SUBIDA DE ARCHIVO (SIN URL MANUAL) -->
            <div class="space-y-4">
              <!-- Subir archivo -->
              <div>
                <label for="foto_archivo" class="block text-sm font-medium text-gray-700 mb-2">
                  Cambiar foto de perfil
                </label>
                <input
                  type="file"
                  id="foto_archivo"
                  name="foto"
                  accept="image/*"
                  class="w-full px-3 py-2 border border-gray-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-sm file:font-medium file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100"
                />
                <p class="mt-1 text-xs text-gray-500">JPG, PNG, WebP (máx. 5MB)</p>
              </div>

              <!-- ✅ CAMPO OCULTO PARA URL (SOLO PARA BACKEND) -->
              <input type="hidden" id="url_foto" name="url_foto" value={persona.url_foto || ''} />

              <!-- Botón para quitar imagen -->
              <button
                type="button"
                id="remove-image"
                class="w-full px-3 py-2 bg-red-50 text-red-700 rounded-lg hover:bg-red-100 focus:outline-none focus:ring-2 focus:ring-red-500 text-sm font-medium transition-all duration-200 border border-red-200"
              >
                Quitar imagen
              </button>
            </div>
          </div>
        </div>
      </div>

      <!-- ====================================================== -->
      <!-- BOTONES DE ACCIÓN -->
      <!-- ====================================================== -->
      <div class="mt-8 flex flex-col sm:flex-row justify-between items-center pt-6 border-t border-gray-200 space-y-4 sm:space-y-0">
        <a
          href={`/personas/${persona.id}`}
          class="inline-flex items-center px-6 py-3 border border-gray-300 text-sm font-medium rounded-lg text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200"
        >
          <svg class="w-4 h-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"/>
          </svg>
          Cancelar
        </a>
        
        <button
          type="submit"
          class="inline-flex items-center px-8 py-3 border border-transparent text-sm font-medium rounded-lg text-white bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-blue-700 hover:to-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 shadow-lg transition-all duration-200 transform hover:scale-105"
        >
          <svg class="w-4 h-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
          </svg>
          Guardar Cambios
        </button>
      </div>
    </form>
  </div>

  <!-- ====================================================== -->
  <!-- SCRIPTS SIMPLIFICADOS -->
  <!-- ====================================================== -->
  <script define:vars={{ departamentos, persona }}>
    document.addEventListener('DOMContentLoaded', function() {
      // ✅ MANEJO DE DEPARTAMENTOS Y MUNICIPIOS
      const departamentoSelect = document.getElementById('departamento');
      const municipioSelect = document.getElementById('municipio');

      // Función para poblar municipios
      function poblarMunicipios(departamentoNombre) {
        const departamento = departamentos.find(d => d.nombre === departamentoNombre);
        
        // Limpiar municipios
        municipioSelect.innerHTML = '<option value="">Seleccione municipio...</option>';
        
        if (departamento && departamento.ciudades) {
          departamento.ciudades.forEach(ciudad => {
            const option = document.createElement('option');
            option.value = ciudad.nombre;
            option.textContent = ciudad.nombre;
            option.selected = ciudad.nombre === persona.municipio;
            municipioSelect.appendChild(option);
          });
        }
      }

      // Poblar municipios al cargar si hay departamento seleccionado
      if (persona.departamento) {
        poblarMunicipios(persona.departamento);
      }

      // Event listener para cambio de departamento
      departamentoSelect.addEventListener('change', function() {
        const selectedDept = this.value;
        if (selectedDept) {
          poblarMunicipios(selectedDept);
        } else {
          municipioSelect.innerHTML = '<option value="">Seleccione municipio...</option>';
        }
      });

      // ✅ MANEJO SIMPLIFICADO DE IMAGEN (SOLO ARCHIVO)
      const fotoArchivoInput = document.getElementById('foto_archivo');
      const imagePreview = document.getElementById('image-preview');
      const defaultAvatar = document.getElementById('default-avatar');
      const removeImageBtn = document.getElementById('remove-image');
      const imagePreviewContainer = document.getElementById('image-preview-container');
      const urlFotoHidden = document.getElementById('url_foto');
      
      function showImagePreview(src) {
        if (imagePreview) {
          imagePreview.src = src;
          imagePreview.classList.remove('hidden');
          imagePreview.style.display = 'block';
        } else {
          // Crear elemento img si no existe
          const newImg = document.createElement('img');
          newImg.id = 'image-preview';
          newImg.src = src;
          newImg.alt = 'Vista previa';
          newImg.className = 'w-full h-full object-cover rounded-xl';
          imagePreviewContainer.innerHTML = '';
          imagePreviewContainer.appendChild(newImg);
        }
        
        if (defaultAvatar) {
          defaultAvatar.style.display = 'none';
        }
        
        // Cambiar estilo del contenedor
        imagePreviewContainer.classList.remove('border-dashed');
        imagePreviewContainer.classList.add('border-solid');
      }

      function hideImagePreview() {
        if (imagePreview) {
          imagePreview.style.display = 'none';
        }
        
        if (defaultAvatar) {
          defaultAvatar.style.display = 'block';
        } else {
          // Recrear el avatar por defecto
          imagePreviewContainer.innerHTML = `
            <div id="default-avatar" class="text-center">
              <svg class="w-16 h-16 text-gray-400 mx-auto mb-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
              </svg>
              <p class="text-sm text-gray-500">Sin foto</p>
            </div>
          `;
        }
        
        // Restaurar estilo del contenedor
        imagePreviewContainer.classList.add('border-dashed');
        imagePreviewContainer.classList.remove('border-solid');
      }

      // ✅ MANEJAR SOLO SUBIDA DE ARCHIVO
      if (fotoArchivoInput) {
        fotoArchivoInput.addEventListener('change', function(e) {
          const file = e.target.files[0];
          if (file) {
            const reader = new FileReader();
            reader.onload = function(e) {
              showImagePreview(e.target.result);
              // Limpiar URL oculta cuando se selecciona archivo
              if (urlFotoHidden) urlFotoHidden.value = '';
            };
            reader.readAsDataURL(file);
          }
        });
      }

      // ✅ MANEJAR BOTÓN DE QUITAR IMAGEN
      if (removeImageBtn) {
        removeImageBtn.addEventListener('click', function() {
          hideImagePreview();
          if (fotoArchivoInput) fotoArchivoInput.value = '';
          if (urlFotoHidden) urlFotoHidden.value = '';
        });
      }
    });
  </script>
</LayoutProtected>

